1. Instalar Nginx
	# apt install nginx

	PHP:
		# apt install php5-fpm php5-dev

		MySQL:
			# apt install mysql-server php5-mysql

		PostgreSQL:
			# apt install postgresql php5-pgsql

2. Configurar el acelerador de carga (Proxy cache)
	.1. Crear un host virtual
		# touch /etc/nginx/sites-available/cache

	.2. Configurar el host virtual
		# <editor> /etc/nginx/sites-available/cache

		proxy_cache_path /tmp/nginx keys_zone=__identificador__:10m max_size=256 inactive=12h;

		server {
			listen 80;
			listen [::]:80 ipv6only=on;

			server_name __nombreSitio__;
			root __rutaSitio__;
			index index.htm index.html index.php;
			charset utf-8;

			# Configuración de cache recomendada por H5BP con algunos arreglos

			location ~* \.(?:manifest|appcache|html?|xml|json)$ {
				expires 1M;
				add_header Cache-Control "public";
			}

			location ~* \.(?:rss|atom)$ {
				expires 1h;
				add_header Cache-Control "public";
			}

			location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
				expires 1M;
				add_header Cache-Control "public";
			}

			location ~* \.(?:css|js)$ {
				expires 1M;
				add_header Cache-Control "public";
			}

			location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
				expires 1M;
				add_header Cache-Control "public";
			}

			# ------------------------------------------

			error_page 405 =200 $uri;  # Permitir que el servidor envie contenido estático solicitado por POST

			location / {
				proxy_cache __identificador__;
				include proxy_params;
				proxy_pass http://__nombreSitio__:8080;
			}
		}

3. Configurar el sitio
	.1. Crear un host virtual
		# touch /etc/nginx/sites-available/<nombreSitio>

	.2. Configurar el host virtual
		# <editor> /etc/nginx/sites-available/<nombreSitio>

		server {
			listen 8080;
			listen [::]:8080 ipv6only=on;

			server_name __nombreSitio__;
			root __rutaSitio__;
			index index.htm index.html index.php;
			charset utf-8;

			#access_log __rutaSitio__/access.log;
			#error_log __rutaSitio__/error.log;

			location / {
				try_files $uri $uri/ =404;
			}

			#error_page 405 =200 $uri;  # Permitir que el servidor envie contenido estático solicitado por POST

			#error_page 404 /404.html;
			#location = /40x.html {
			#	root __rutaPáginaError40x__;
			#}

			#error_page 500 502 503 504 /50x.html;
			#location = /50x.html {
			#	root __rutaPáginaError50x__;
			#}

			location ~ \.php$
			{
				include fastcgi_params;
				fastcgi_split_path_info ^(.+\.php)(/.+)$;
				fastcgi_pass unix:/var/run/php5-fpm.sock;
				fastcgi_param SCRIPT_FILENAME __rutaSitio__$fastcgi_script_name;
				fastcgi_index index.php;
				fastcgi_buffers 8 16k;
				fastcgi_buffer_size 32k;
				fastcgi_connect_timeout 300;
				fastcgi_send_timeout 300;
				fastcgi_read_timeout 300;
			}
		}

	Nota: si se quiere habilitar la navegación entre carpetas se debe agregar:
		location ~* /$ {
			autoindex on;
		}

	O en caso de que sea una sola carpeta:
		location /rutaCarpeta/ {
			autoindex on;
		}

4. Finalizar configuraciones
	.1. Establecer los permisos adecuados
		# chown -R <usuario>:www-data <rutaSitio> && chmod -R a=rwx,o-w <rutaSitio>

	.2. Si se necesita que el usuario www-data ejecute comandos UNIX debe tener un shell asignado
		.1. Abrir el archivo que contiene las configuraciones básicas de inicio de los usuarios
			# <editor> /etc/passwd

		.2. Verificar que shell tiene asignado el usuario www-data
			www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin  # Original
			www-data:x:33:33:www-data:/var/www:<shell>  # Cambiar por algún shell instalado, por ejemplo: /bin/dash

		Nota: En caso de que no sea necesario que www-data use comandos UNIX desactivar el shell asignando "/usr/sbin/nologin"

	.3. Activar las configuraciones
		# ln -s /etc/nginx/sites-available/cache /etc/nginx/sites-enabled/
		# ln -s /etc/nginx/sites-available/<nombreSitio> /etc/nginx/sites-enabled/
		# /etc/init.d/nginx restart

		Notas:
			· Si el servidor no interpreta los archivos PHP, reiniciar la computadora.
			· Si __nombreSitio__ es diferente a "localhost" se debe modificar el archivo "/etc/hosts" o el servicio de NGINX mostrará un error al intentar iniciar
				1. Abrir el archivo "/etc/hosts" con un editor
					# <editor> /etc/hosts

				2. Modificar la línea de host local
					127.0.0.1	localhost -> 127.0.0.1	localhost __nombreSitio__

Si se instaló PostgreSQL:
	1. Asignar una contraseña al usuario de PostgreSQL
		# passwd postgres

	2. Crear un rol en PostgresSQL para el usuario HTTP
		$ su postgres
		$ createuser -s www-data

	3. Asignar una contraseña al usuario de PostgreSQL y al HTTP
		$ psql
		postgres=# alter user "postgres" with encrypted password '<contraseña>';
		postgres=# \q

	4. Reiniciar el servicio de PostgreSQL:
		# /etc/init.d/postgresql restart

	Nota: Si se instala PHPPgAdmin:
		1. Abrir el archivo de configuración de PHPPgAdmin:
			# <editor> /etc/phppgadmin/config.inc.php

		2. Cambiar el valor de la variable de configuración "$conf['extra_login_security']":
			$conf['extra_login_security'] = true;  ->  $conf['extra_login_security'] = false;

Si se instaló MySQL:
	En caso de que al intentar iniciar el interprete de MySQL muestre "ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)" o algún error parecido se debe restablecer la contraseña del usuario root:
		1. Detener el servicio de MySQL
			# /etc/init.d/mysql stop

		2. Iniciar el servidor sin restricciones de acceso a las tablas
			# mysqld --skip-grant-tables

		3. Restablecer la contraseña del usuario root
			mysql> update user set password=password('<contraseña>') where user='root';

		4. Iniciar el servicio de MySQL
			# /etc/init.d/mysql start

Referencias:
	https://www.nginx.com/resources/admin-guide/content-caching/
	https://serversforhackers.com/nginx-caching/
	https://github.com/h5bp/server-configs-nginx/blob/master/h5bp/location/expires.conf
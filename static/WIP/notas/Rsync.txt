Instalación:
    # apt-get install rsync

Uso:
    $ rsync [<opciones>] <origen> [<destino>]

    Parámetros:
        * `<origen>`: Puede ser una ubicación local, un servidor SSH o un daemon Rsync. En caso de que `<origen>` sea una carpeta, si se especifica con un `/` al finál, se transferirá su contenido; pero si no, se transferirá la carpeta completa. Ejemplos:

            ~/Repositorios
            ntrrg@192.168.1.100:Repositorios
            ntrrg@192.168.1.100::ntrrg/Repositorios

        * `<destino>`: Puede ser una ubicación local, un servidor SSH o un daemon Rsync, si no se especifica se obtendrá un comportamiento parecido al de ejecutar `ls -l`.

        * `<opciones>`: Puede usarse cualquiera de la siguientes opciones:

            * `v`, `verbose`: Aumenta la descripción obtenida durante la transferencia.

            * `msgs2stderr`: Envia todos los mensajes de la salida estandar al error estandar.

            * `progress`: Muestra el progreso por archivo.

            * `info=progress2`: Muestra el progreso por transferencia.



            * `q`, `quiet`: Disminuye la descripción obtenida durante la transferencia.



            * `r`, `recursive`: Permite transferir carpetas.

            * `R`, `relative`: Crea las carpetas de la ruta `<origen>` en `<destino>`, ejemplo:
                /home/ntrrg/Descargas 192.168.1.100::ntrrg/Descargas

                Creará `192.168.1.100::ntrrg/Descargas/home/ntrrg/Descargas`

                /home/./ntrrg/Descargas 192.168.1.100::ntrrg/Descargas

                Creará `192.168.1.100::ntrrg/Descargas/ntrrg/Descargas`

            * `b`, `backup`: Respalda los archivos modificados o eliminados en `<destino>`, por defecto copia los archivos en la misma carpeta y les agrega `~` al finál del nombre, que puede cambiarse con la opción `suffix=<sufijo>`. Se puede cambiar la ubicación del respaldo con la opción `backup-dir=<ruta>`, si no se define el sufijo, no se cambiarán los nombres de los archivos.

            * `l`, `links`: Envía y arregla los enlaces simbólicos.

            * `L`, `copy-links`: Envía el archivo al que apuntan los enlaces simbólicos.

            * `safe-links`: Ignora enlaces simbólicos que apunten a un lugar fuera de la carpeta copiada

            * `p`, `perms`: Mantiene los permisos.

            * `X`, `xattrs`: Mantiene los atributos.

            * `chmod=<permisos>`: Aplica los permisos definidos, además permite usar los prefijos `D` y `F` para aplicar los permisos solo a carpetas o archivos respectivamente. Esta opción puede repetirse.

            * `chown=<usuario>:<grupo>`: Establece el propietario y el grupo.

            * `o`, `owner`: Mantiene el propietario.

            * `g`, `group`: Mantiene el grupo.

            * `t`, `times`: Mantiene la fecha de modificación.

            * `n`, `dry-run`: Emula la transferencia.

            * `existing`: Evita crear archivos y carpetas que no existan en `<destino>`.

            * `ignore-existing`: Evita actualizar los archivos que ya existan en `<destino>`.

            * `remove-source-files`: Elimina los archivos transferidos correctamente de `<origen>`.

            * `delete`: Elimina los archivos que no se encuentren en `<origen>`, a menos que coincidan con algún patrón en `exclude`.

            * `delete-before`: Ejecuta el parámetro `delete` antes de la transferencia.

            * `delete-after`: Ejecuta el parámetro `delete` después de la transferencia.

            * `delete-excluded`: Elimina los archivos que no se encuentren en `<origen>`, incluso si coinciden con algún patrón en `exclude`

            * `force`: Permite forzar la eliminación de carpetas en caso de error.

            * `max-size=<tamaño><medida>`: Ignora archivos con mayor tamaño que <tamaño>.

            * `min-size=<tamaño><medida>`: Ignora archivos con menor tamaño que <tamaño>.

            * `C`, `cvs-exclude`: Ignora archivos como sistemas de control de versiones.

            * `exclude=<patrón>`: Patrón a excluir. Se puede repetir.

            * `exclude-from=<archivo>`: Lee los patrones a excluir separados por lineas desde un archivo.

            * `include=<patrón>`: Patrón a incluir. Se puede repetir.

            * `include-from=<archivo>`: Lee los patrones a incluir desde un archivo separados por líneas.

            * `files-from=<archivo> | -`: Lista de archivos a transferir desde un archivo o la entrada estándar.

            * `z`, `compress`: Habilita la compresión.

            * `stats`: Muestra estadísticas al finál de la transferencia.

            * `h`, `human-readable`: Muestra las unidades legibles por humanos.

            * `partial`: En caso de error o interrupción, se mantienen las partes de los archivos que lograron transferirse para evitar reiniciar la transferencia, útil para archivos grandes, se debe usar con la opción `append`.

            * `e`: Programa de Shell remoto a usar, también sirve para agregar opciones a SSH, ejemplo: 

                rsync -uahe "ssh -p 8022" --progress Origen destino@servidor:



            * `I`, `ignore-times`: Forza la transferencia, sin importar las diferencias en el destino.

            * `size-only`: Comprueba el tamaño de los archivos.

            * `u`, `update`: Comprueba la fecha de modificación, si tienen la misma fecha comprueba el tamaño.

            * `append`: Transfiere solo la parte que falta de los archivos, pero no comprueba la parte que ya existe en el destino.

            * `c`, `checksum`: Comprueba por medio de checksums, aumenta el tiempo de las transferencias.



            * `a`, `archive`: Equivalente a `-rlptgoD`.

            * `P`: Equivalente a `--progress --partial`.

            * `no-<opción>`: Permite desactivar opciones especificadas, por ejemplo: `-a -no-r` para evitar que la recursividad.

            Para el daemon:

                * `no-motd`: Evita que se muestre el banner, también causa que no se listen los módulos.

                * `password-file=<archivo> | -`: Contraseña desde un archivo o la entrada estándar, el archivo debe ser legible solo por su propietario.

            Nota: es posible crear alias con la sintaxis:

                rsync alias <alias> <opciones>

                rsync alias --miOpc -au --progress
                rsync --miOpc /home/ntrrg/Descargas 192.168.1.100::ntrrg

Servidor:
    # rsync --daemon

    Archivo de configuración: `/etc/rsyncd.conf`

    Parámetros globales:
        <parámetro> = <valor>

        * `motd file`: Archivo que contiene el banner, desactivado por defecto.

        * `pid file`: Archivo donde se guarda el PID del daemon.

        * `port`: Puerto donde montar el daemon, su valor predefinido es `873`.

        * `address`: IP donde montar el daemon.

        Nota: se pueden usar valores de variables de entorno para realizar asigación con la sintaxis `%VARIABLE%`.

    Módulos:
        [<módulo>]

        Parámetros:
            <parámetro> = <valor>

            * `comment`: Descripción del módulo.

            * `path`: Ruta del módulo.

            * `max connections`: Cantidad máxima de conexiones simultáneas, si se especifica un valor negativo el módulo quedará inhabilitado, su valor predefinido es `0`.

            * `lock file`: Archivo donde se lleva la información sobe las sesiones activas, su valor predefinido es `/var/run/rsyncd.lock`.

            * `read only`: Modo de solo lectura, su valor predefinido es `true`.

            * `write only`: Modo de solo escritura, su valor predefinido es `false`.

            * `list`: Determina si el módulo podrá ser listable, su valor predefinido es `true`.

            * `exclude`: Lista de patrones a excluir separados por espacios.

            * `exclude from`: Lee los patrones a excluir separados por lineas desde un archivo.

            * `include`: Lista de patrones a incluir separados por espacios.

            * `include from`: Lee los patrones a incluir desde un archivo separados por líneas.

            * `incoming chmod`: Aplica los permisos especificados a todos los archivos subidos, los permisos se deben especificar en modo texto.

            * `outgoing chmod`: Aplica los permisos especificados a todos los archivos descargados, los permisos se deben especificar en modo texto.

            * `auth users`: Lista de reglas de autenticación separadas por espacios, la sintaxis para definir reglas es `[@]<patrón de usuario>[:<regla>]`, los usuarios no necesitan estar registrados en el sistema, a menos que se use el operador de grupos `@` que comprobará si el usuario es miembro del grupo especificado; se pueden usar patrones GLOB para comprobar los nombres de usuario; las reglas son: `ro`, `rw` y `deny`, el parámetro `read only` será sobrescrito a menos que no se especifique una regla. Las contraseñas serán definidas en el archivo espeficado en el parámetro `secrets file`.

            * `secrets file`: Lee la lista de contraseñas desde un archivo separadas por líneas, la sintaxes para definir contraseñas es `<usuario>:<contraseña>` o `@<grupo>:<contraseña>`.

            * `strict modes`: Comprueba que el archivo especificado en `secrets file` solo sea legible por el usuario que ejecuta el daemon, su valor predefinido es `true`.

            * `uid`: Nombre del usuario usado durante la transferencia.

            * `gid`: Nombre del grupo usado durante la transferencia.

            * `hosts allow`: Lista de direcciones habilitadas separadas por espacios.

            * `hosts deny`: Lista de direcciones deshabilitadas separadas por espacios.

            * `timeout`: Tiempo de espera en segundos, su valor predefinido es `0`.

            * `dont compress`: Lista de patrones a no comprimir separados por espacios.

            * `pre-xfer exec`/`post-xfer exec`: Comando a ejectuarse antes/después de la transferencia, se crearán las varibles de entorno:

                * `RSYNC_MODULE_NAME`: Nombre del módulo.

                * `RSYNC_MODULE_PATH`: Ruta del módulo.

                * `RSYNC_HOST_ADDR`: Dirección del cliente.

                * `RSYNC_HOST_NAME`: Nombre de host del cliente.

                * `RSYNC_USER_NAME`: Usuario de rsync usado, estará vacío si es una transferencia anónima.

                * `RSYNC_PID`: PID de la transferencia.

                * `RSYNC_REQUEST`: Rutas que afectan la transferencia, solo para `pre-xfer exec`.

                * `RSYNC_ARG<posición>`: Rutas que afectan la transferencia por separado, el valor de la posición `0` siempre será `"rsyncd"`; solo para `pre-xfer exec`.

                * `RSYNC_EXIT_STATUS`: Salida obtenida por la transferencia, retorna `0` si se realizó con éxito, un número positivo si ocurre un error y `-1` si ocurre un error durante la salida de rsync; solo para `post-xfer exec`.

            Nota: se pueden usar valores de variables de entorno para realizar asigación con la sintaxis `%VARIABLE%`.

    Códigos de salida:

        * `0`: Success.

        * `1`: Syntax or usage error.

        * `2`: Protocol incompatibility.

        * `3`: Errors selecting input/output files, dirs.

        * `4`: Requested action not supported: an attempt was made to manipulate 64-bit files on a platform that cannot support them;  or  an  option  was specified that is supported by the client and not by the server..

        * `5`: Error starting client-server protocol.

        * `6`: Daemon unable to append to log-file.

        * `10`: Error in socket I/O.

        * `11`: Error in file I/O.

        * `12`: Error in rsync protocol data stream.

        * `13`: Errors with program diagnostics.

        * `14`: Error in IPC code.

        * `20`: Received SIGUSR1 or SIGINT.

        * `21`: Some error returned by waitpid().

        * `22`: Error allocating core memory buffers.

        * `23`: Partial transfer due to error.

        * `24`: Partial transfer due to vanished source files.

        * `25`: The --max-delete limit stopped deletions.

        * `30`: Timeout in data send/receive.

        * `35`: Timeout waiting for daemon connection.
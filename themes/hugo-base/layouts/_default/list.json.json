{{ define "data" }}
  {
    "pages": [
      {{ $pages := slice }}

      {{ if in (slice "taxonomy" "term") .Kind }}
        {{ $pages = sort .Pages (.Params.sortBy | default "Title") }}
      {{ else if eq .Params.paginate true }}
        {{ $pages = .Paginator.Pages }}
      {{ else }}
        {{ $pages = .Pages }}
      {{ end }}

      {{ range $i, $page := $pages }}
        {{ if ne $i 0 }},{{ end }}
        {{ if gt (len .Pages) 0 }}
          {
            "url": {{ jsonify .Permalink }},
            "title": {{ jsonify .Title }},
            "pages": {{ len .Pages }}
          }
        {{ else }}
          {
            "url": {{ jsonify .Permalink }},
            "title": {{ jsonify .Title }},

            {{ $image := .Params.image | default "" }}

            {{ if ne $image "" }}
              {{ if hasPrefix $image "/" }}
                {{ $image = absURL $image }}
              {{ else if not (strings.HasPrefix .Params.image "http") }}
                {{ $image = path.Join .RelPermalink $image | absURL }}
              {{ end }}
            {{ end }}

            "image": {{ jsonify $image }},

            {{ if isset .Params "date" }}
              "publishdate": {{ jsonify .PublishDate }},
              "date": {{ jsonify .Date }},
            {{ end }}

            {{ $sectDesc := $.Description }}

            {{ if ne .Description $sectDesc }}
              "description": {{ jsonify .Description }},
            {{ else }}
              "description": "",
            {{ end }}

            "taxonomies": {
              {{ $i := 0 }}
              {{ range $name, $_ := $.Site.Taxonomies }}
                {{ if ne $i 0 }},{{ end }}
                "{{ $name }}": {{ index $page.Params $name | default slice | jsonify }}
                {{ $i = add $i 1 }}
              {{ end }}
            }
          }
        {{ end }}
      {{ end }}
    ]

    {{ if eq .Params.paginate true }}
      ,
      {{ $prefix := printf "%spage/" .Permalink }}

      "pagination": {
        "prefix": "{{ $prefix }}",
        "first": "{{ with .Paginator.First }}{{ $prefix }}{{ .PageNumber }}{{ end }}",
        "prev": "{{ with .Paginator.Prev }}{{ $prefix }}{{ .PageNumber }}{{ end }}",
        "next": "{{ with .Paginator.Next }}{{ $prefix }}{{ .PageNumber }}{{ end }}",
        "last": "{{ with .Paginator.Last }}{{ $prefix }}{{ .PageNumber }}{{ end }}"
      }
    {{ end }}
  }
{{ end }}

